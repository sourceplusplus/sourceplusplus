spp-platform:
  host: ${SPP_PLATFORM_HOST:-0.0.0.0}
  jwt:
    enabled: ${SPP_JWT_ENABLED:-false}
    authorization_code: ${SPP_JWT_AUTHORIZATION_CODE:-change-me}
  http:
    port: ${SPP_HTTP_PORT:-12800}
    ssl_enabled: ${SPP_HTTP_SSL_ENABLED:-false}
    ssl_cert: ${SPP_HTTP_SSL_CERT:-}
    ssl_key: ${SPP_HTTP_SSL_KEY:-}
    redirect_to_https: ${SPP_HTTP_REDIRECT_TO_HTTPS:-false}
  logging:
    level: ${SPP_LOGGING_LEVEL:-info}
  bridge:
    ping_timeout: ${SPP_BRIDGE_PING_TIMEOUT:-10}
  pii-redaction:
    enabled: ${SPP_PII_REDACTION_ENABLED:-true}
    redactions:
      - id: "phone_redaction"
        type: "VALUE_REGEX"
        lookup: '\b(\+\d{1,2}\s)?\(?\d{3}\)?[\s.-]\d{3}[\s.-]\d{4}\b'
        replacement: "<Phone Number>"
      - id: "ssn_redaction"
        type: "VALUE_REGEX"
        lookup: '\b\d{3}[- ]?\d{2}[- ]?\d{4}\b'
        replacement: "<SSN>"
      - id: "email_redaction"
        type: "VALUE_REGEX"
        lookup: '\b[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}\b'
        replacement: "<Email>"
      - id: "ip_redaction"
        type: "VALUE_REGEX"
        lookup: '\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b'
        replacement: "<IP>"
      - id: "url_redaction"
        type: "VALUE_REGEX"
        lookup: '\b?^(https?|ftp|file)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|]\b?'
        replacement: "<URL>"
      - id: "credit_card_redaction"
        type: "VALUE_REGEX"
        lookup: '\b\d{4}[- ]?\d{4}[- ]?\d{4}[- ]?\d{4}\b'
        replacement: "<Credit Card>"
      - id: "bank_account_redaction"
        type: "VALUE_REGEX"
        lookup: '\b\d{4}[- ]?\d{4}[- ]?\d{4}[- ]?\d{4}\b'
        replacement: "<Bank Account>"
      - id: "zip_code_redaction"
        type: "VALUE_REGEX"
        lookup: '\b\d{5}[- ]?\d{4}\b'
        replacement: "<Zip Code>"
      - id: "password_variable_redaction"
        type: "IDENTIFIER_MATCH"
        lookup: 'password'
        replacement: "<Password>"

live-presets:
  uncaught-exception:
    enabled: ${SPP_PRESET_UNCAUGHT_EXCEPTIONS_ENABLED:-true}
    instruments:
      - id: "spp_uncaught_exception"
        type: "BREAKPOINT"
        hitLimit: -1
        location:
          source: "spp.probe.services.LiveInstrumentRemote.dispatchUncaughtException(...)"
  junit:
    enabled: ${SPP_PRESET_JUNIT_ENABLED:-true}
    instruments:
      - id: "spp_junit_test_successful"
        type: "METER"
        meterType: "COUNT"
        metricValue:
          valueType: "NUMBER"
          value: 1
        meterPartitions:
          - keys:
              - "spp_junit_test_failed"
            valueType: "VALUE_EXPRESSION"
            value: "localVariables[descriptor].testMethod"
        location:
          source: "org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.nodeFinished(...)"
        condition: "localVariables[result].status.ordinal == 0"
        meta:
          metric.mode: "RATE"
      - id: "spp_junit_test_failed"
        type: "METER"
        meterType: "COUNT"
        metricValue:
          valueType: "NUMBER"
          value: 1
        meterPartitions:
          - keys:
              - "spp_junit_test_successful"
            valueType: "VALUE_EXPRESSION"
            value: "localVariables[descriptor].testMethod"
        location:
          source: "org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.nodeFinished(...)"
        condition: "localVariables[result].status.ordinal == 2"
        meta:
          metric.mode: "RATE"
    view-rules:
      - name: "spp_junit_test_successful"
        meterIds: [ "spp_junit_test_successful", "spp_junit_test_failed" ]
        exp: "((spp_junit_test_successful*100 / (spp_junit_test_successful + spp_junit_test_failed)).sum(['service'])).service(['service'], Layer.GENERAL)"
        partitions:
          - find: "spp_junit_test_successful"
            replace: "spp_junit_test_successful_$partition$"
          - find: "spp_junit_test_failed"
            replace: "spp_junit_test_failed_$partition$"
  jvm-probe:
    enabled: ${SPP_PRESET_JVM_PROBE_ENABLED:-false}
    instruments:
      - id: "spp_meter_sender_transform"
        type: "BREAKPOINT"
        location:
          source: "org.apache.skywalking.apm.agent.core.meter.MeterSender.transform(...)"
        hitLimit: -1

client-access:
  enabled: ${SPP_CLIENT_ACCESS_ENABLED:-false}
  accessors:
    - id: ${SPP_CLIENT_ACCESS_ID:-}
      secret: ${SPP_CLIENT_ACCESS_SECRET:-}

storage:
  selector: ${SPP_STORAGE:-memory}
  redis:
    host: ${SPP_STORAGE_HOST:-localhost}
    port: ${SPP_STORAGE_PORT:-6379}
    options:
      max_pool_size: ${SPP_STORAGE_REDIS_MAX_POOL_SIZE:-10}
      max_pool_waiting: ${SPP_STORAGE_REDIS_MAX_POOL_WAITING:-100}
      max_waiting_handlers: ${SPP_STORAGE_REDIS_MAX_WAITING_HANDLERS:-10000}
    cluster:
      enabled: ${SPP_STORAGE_CLUSTER_ENABLED:-false}

skywalking-core:
  host: ${SW_CORE_HOST:-localhost}
  rest_port: ${SW_CORE_REST_PORT:-12801}
  grpc:
    port: ${SW_CORE_GRPC_PORT:-11800}
    ssl_enabled: ${SW_CORE_GRPC_SSL_ENABLED:-false}
    ssl_key_path: ${SW_CORE_GRPC_SSL_KEY_PATH:-}
    ssl_cert_chain_path: ${SW_CORE_GRPC_SSL_CERT_CHAIN_PATH:-}
    ssl_trusted_ca_path: ${SW_CORE_GRPC_SSL_TRUSTED_CA_PATH:-}
